Юниттесты
#########

:date: 2015-02-11 
:tags: python, tutorial, уроки, unittest
:slug: 2-3
:category: Урок 2
:authors: zdimon77@gmail.con



Отличие юниттестов от функциональных.

1. Функциональные работают с точки зрения обычного пользователя и включают в себя имитацию действий в браузере. 
2. Юнит тесты проверяют приложение "изнутри", работают с точки зрения программиста и могут проверить более "глубокие" участки кода.

Создадим приложение которое будем тестировать.

.. code-block:: Bash
    
    ./manage.py startapp blog

Получившееся структура каталогов.

.. uml::

    @startsalt
    {
    {T
     + <&folder>o_ve
     ++ <&folder>o
     +++ <&folder>o
     +++ <&file>urls.py
     +++ <&file>wsgi.py
     +++ <&file>urls.py
     +++ <&file>settings.py
     ++ <&folder>blog
     +++ <&folder>migrations
     +++ <&file>views.py
     +++ <&file>tests.py
     +++ <&file>models.py
     +++ <&file>admin.py   
     + <&file>ft.py
     + <&file>db.sqlite3
     + <&file>manage.py   
    }
    }
    @endsalt

Добавим первый 'тупой' тест в *tests.py*.


.. code-block:: Python

    from django.test import TestCase

    class SmokeTest(TestCase):

	    def test_bad_maths(self):
		    self.assertEqual(1+1, 3)

Запустим.

.. code-block:: Bash

    ./manage.py test


Видим.


.. code-block:: Python


    Creating test database for alias 'default'...
    F
    ======================================================================
    FAIL: test_bad_maths (blog.tests.SmokeTest)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/home/zdimon/hd/www/o_ve/o/blog/tests.py", line 8, in test_bad_maths
        self.assertEqual(1+1, 3)
    AssertionError: 2 != 3

    ----------------------------------------------------------------------
    Ran 1 test in 0.001s

    FAILED (failures=1)
    Destroying test database for alias 'default'...

    
Теперь проверим существование корневого (начального) урла в проекте Django.
Для этого импортируем функцию resolve из пакета джанги, которая на вход принимает обозначение url и возвращает функцию (вьюху) которая обрабатывает данный урл.
Предположем что вьюха называется home_page.

.. code-block:: Python

    from django.core.urlresolvers import resolve
    from django.test import TestCase
    from django.http import HttpRequest

    from blog.views import home_page


    class HomePageTest(TestCase):

        def test_root_url_resolves_to_home_page_view(self):
            found = resolve('/')
            self.assertEqual(found.func, home_page)



Запустим.

.. code-block:: Bash

    ./manage.py test


Видим.

.. code-block:: Bash

    ======================================================================
    ERROR: blog.tests (unittest.loader.ModuleImportFailure)
    ----------------------------------------------------------------------
    ImportError: Failed to import test module: blog.tests
    Traceback (most recent call last):
      File "/usr/lib/python2.7/unittest/loader.py", line 254, in _find_tests
        module = self._get_module_from_name(name)
      File "/usr/lib/python2.7/unittest/loader.py", line 232, in _get_module_from_name
        __import__(name)
      File "/home/zdimon/hd/www/o_ve/o/blog/tests.py", line 5, in <module>
        from blog.views import home_page
    ImportError: cannot import name home_page


    ----------------------------------------------------------------------

Создадим нечто похожее на ф-цию (вьюху) в фале blog/views.py.

.. code-block:: Python

    
    from django.shortcuts import render

    home_page = None

Результат.


.. code-block:: Bash

    ======================================================================
    ERROR: test_root_url_resolves_to_home_page_view (blog.tests.HomePageTest)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/home/zdimon/hd/www/o_ve/o/blog/tests.py", line 11, in test_root_url_resolves_to_home_page_view
        found = resolve('/')
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/core/urlresolvers.py", line 494, in resolve
        return get_resolver(urlconf).resolve(path)
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/core/urlresolvers.py", line 358, in resolve
        raise Resolver404({'tried': tried, 'path': new_path})
    Resolver404: {u'path': u'', u'tried': [[<RegexURLResolver <RegexURLPattern list> (admin:admin) ^admin/>]]}

    ----------------------------------------------------------------------
    Ran 1 test in 0.063s


Этот пример неочевидной ошибки когда причину нужно искать не внизу стека а чуть выше в этом случае raise Resolver404({'tried': tried, 'path': new_path}).
Что означает что урл нами не описан. Опишем его в файле o/urls.py. Одновременно закомментируем админку т.к. мы ее не используем.

.. code-block:: Python

    from django.conf.urls import patterns, include, url
    from django.contrib import admin

    urlpatterns = patterns('',
        # Examples:
         url(r'^$', 'blog.views.home_page', name='home'),
        # url(r'^blog/', include('blog.urls')),

        #url(r'^admin/', include(admin.site.urls)),
    )



Результат

.. code-block:: Bash

    ======================================================================
    ERROR: test_root_url_resolves_to_home_page_view (blog.tests.HomePageTest)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/home/zdimon/hd/www/o_ve/o/blog/tests.py", line 11, in test_root_url_resolves_to_home_page_view
        found = resolve('/')
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/core/urlresolvers.py", line 494, in resolve
        return get_resolver(urlconf).resolve(path)
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/core/urlresolvers.py", line 345, in resolve
        sub_match = pattern.resolve(new_path)
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/core/urlresolvers.py", line 224, in resolve
        return ResolverMatch(self.callback, args, kwargs, self.name)
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/core/urlresolvers.py", line 231, in callback
        self._callback = get_callable(self._callback_str)
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/utils/lru_cache.py", line 101, in wrapper
        result = user_function(*args, **kwds)
      File "/home/zdimon/hd/www/o_ve/local/lib/python2.7/site-packages/django/core/urlresolvers.py", line 113, in get_callable
        (mod_name, func_name))
    ViewDoesNotExist: Could not import blog.views.home_page. View is not callable.

    ----------------------------------------------------------------------
    Ran 1 test in 0.013s

Это значит что home_page - НЕ функция и не может быть вызвана.
Опишем вьюху как функцию, а не как ничто (None), a как ф-цию которая ничего не делает.

*blog/views.py*


.. code-block:: Python


    from django.shortcuts import render

    def home_page():
	    pass


Результат

.. code-block:: Bash

    ----------------------------------------------------------------------
    Ran 1 test in 0.008s

    OK

Раз результат положительный - пишем второй тест.

.. code-block:: Python

    from django.core.urlresolvers import resolve
    from django.test import TestCase
    from django.http import HttpRequest

    from lists.views import home_page


    class HomePageTest(TestCase):

        def test_root_url_resolves_to_home_page_view(self):
            found = resolve('/')
            self.assertEqual(found.func, home_page)


        def test_home_page_returns_correct_html(self):
            request = HttpRequest()
            response = home_page(request)
            self.assertTrue(response.content.startswith(b'<html>'))
            self.assertIn(b'<title>To-Do lists</title>', response.content)
            self.assertTrue(response.content.endswith(b'</html>'))



Тут мы ожидаем получить на странице вот такую разметку


.. code-block:: HTML


    <html>
    .....
       <title>Hello</title>
    .....
    </html>

Получаем.


.. code-block:: Bash

    ======================================================================
    ERROR: test_home_page_returns_correct_html (blog.tests.HomePageTest)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/home/zdimon/hd/www/o_ve/o/blog/tests.py", line 17, in test_home_page_returns_correct_html
        response = home_page(request)
    TypeError: home_page() takes no arguments (1 given)

    ----------------------------------------------------------------------
    Ran 2 tests in 0.008s

    FAILED (errors=1)


Означает что мы ничего не передали в функцию вьюхи, а надо. Передадим ей обьек request который посылает нам браузер.
Передадим ей request.


.. code-block:: Python

    def home_page(request):
        pass

Тест.


.. code-block:: Bash

    ======================================================================
    ERROR: test_home_page_returns_correct_html (blog.tests.HomePageTest)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/home/zdimon/hd/www/o_ve/o/blog/tests.py", line 18, in test_home_page_returns_correct_html
        self.assertTrue(response.content.startswith(b'<html>'))
    AttributeError: 'NoneType' object has no attribute 'content'

    ----------------------------------------------------------------------
    Ran 2 tests in 0.011s

    FAILED (errors=1)


Это означает что функция ничего не возвратила (или возвратила объект None). А должна возвратить респонс.


.. code-block:: Python

    from django.shortcuts import render
    from django.http import HttpResponse

    # Create your views here.
    def home_page(request):
        return HttpResponse('<html><title>To-Do lists</title></html>')

Тесты позволяют:

- экономить время в дальнейшем при усложнении проекта
- никогда не заботиться о том что делать следующим шагом


Усложним немного функциональный тест.
*o/ft.py*

.. code-block:: Python

    #!../bin/python
    # -*- coding: utf-8 -*-
    from selenium import webdriver
    import unittest

    class NewVisitorTest(unittest.TestCase):

        def setUp(self):
            self.browser = webdriver.Firefox()
            self.browser.implicitly_wait(3)

        def tearDown(self):
            self.browser.quit()

        def test_is_title_ok(self):
            self.browser.get('http://localhost:8000')
            self.assertIn('Hello', self.browser.title)

            # найдем тег H1 с содержимым
            header_text = self.browser.find_element_by_tag_name('h1').text
            self.assertIn('Hello world', header_text)
            
            # найдем inputbox с атрибутом
            inputbox = self.browser.find_element_by_id('id_new_item')
            self.assertEqual(
                    inputbox.get_attribute('placeholder'),
                    'Enter a to-do item'
            )

            # заполним inputbox 
            inputbox.send_keys('Buy peacock feathers')

            # поищем на странице таблицу с заданным текстом
            table = self.browser.find_element_by_id('id_list_table')
            rows = table.find_elements_by_tag_name('tr')
            self.assertTrue(
                any(row.text == '1: Buy peacock feathers' for row in rows),
                "New to-do item did not appear in table"
            )


            self.fail('Finish the test!')

    if __name__ == '__main__':
        unittest.main()



.. uml::
    @startuml
        :Write test;
        if (Run the sest. Does it pass?) then (yes)
            if (Does it need refactoring?) then (yes)
                :Write minimal code;
            else (no)
                --> :Write minimal code;
                
    @enduml



